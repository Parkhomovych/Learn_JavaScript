// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze


// –û–±'—î–∫—Ç
// const user = {
//     name: 'Test user',
//     skills: {
//         html: true,
//         css: true,
//         react: false
//     },
// }


// –ó–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç–∞

// console.log(user.name);
// console.log('css', user.skills.css);

// const objectKey = 'name';

// console.log(user[objectKey]);
// console.log(user['name']);

// const user = {
//     name: 'Test user',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }
// console.log(user.name);
// function getKey(key){ // 'name' 'skills'
//     console.log(user[key])//user['name']
// }
// getKey('name')
// getKey('skills')

// const objectKey = 'skills';
// const skillKey = 'css';


// console.log(user['skills']['css']);
// console.log(user[objectKey][skillKey]);
// console.log(user.skills[skillKey]);
// console.log(user[objectKey].css);



// –ó–º—ñ–Ω–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
// const user = {
//     name: 'Test user',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }

// user.city = 'Lviv';
// user['age'] = 28;
// console.log(user);


// user.city = 'Odessa';
// console.log(user);



// const user = {
//     name: 'Test user',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }
// Object.freeze(user.skills);
// user.name = 'Artem';
// user.city = 'Lviv';
// user.skills.html = true;
// console.log(user);

// const user = {
//     name: 'Test user',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }

// user.city = 'Lviv';
// delete user.city
// console.log(user);

// –ú–µ—Ç–æ–¥–∏ –æ–±'—î–∫—Ç–∞
// const user = {
//     name: 'Artem',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
//     sayHello(city) {
//         // console.log(city);
//         console.log(`Hello my name ${this.name}`);
//     }
// }

// const user2 = {
//     name: 'Den',
//     skills: {
//         html: true,
//         css: true,
//         react: true
//     },
//     sayHello: user.sayHello
// }

// user2.sayHello()
// user.sayHello('Lviv')

// console.log(user);





// –¶–∏–∫–ª for...in
// const testObj = {
//     name: 'Artem',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     }, sayHello(city) {
//         // console.log(city);
//         console.log(`Hello my name ${this.name}`);
//     }
// }

// const user = Object.create(testObj);
// user.city = 'Lviv'
// console.log(user);

// for (const key in testObj) {
//     if (testObj.hasOwnProperty(key)) {
//         console.log(key, user[key]);
//     }
// }





// –ú–µ—Ç–æ–¥ Object.keys()
// const user = {
//     name: 'Artem',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }

// const keys = Object.keys(user);
// for(const key of keys){
//     console.log(key,user[key]);
// }
// console.log(keys);



// –ú–µ—Ç–æ–¥ Object.values()

// const user = {
//     name: 'Artem',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }
// const values = Object.values(user);
// const values = Object.values(user.skills);
// console.log(values);

// –ú–µ—Ç–æ–¥ Object.entries()

// const user = {
//     name: 'Artem',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }


// const entries = Object.entries(user);
// const entries = Object.entries(user.skills);
// console.log(entries);




// –ü–µ—Ä–µ—Ä–≤–∞ –¥–æ 21.05




// –ü—Ä–∞–∫—Ç–∏–∫–∞ //
// Task - 1
// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –æ–±'—î–∫—Ç –ø–æ–∫—É–ø–∫–∏
// 1 –ù–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É
// 2 –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å
// 3 –¶—ñ–Ω–∞ –∑–∞ 1 –æ–¥–∏–Ω–∏—Ü—é —Ç–æ–≤–∞—Ä—É
// –§—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∏–π –æ–±'—î–∫—Ç –∑ –∫–ª—é—á–∞–º–∏ name, price, quantity, totalPrice.


// function createBasket(product, quantity, price) {
//     const totalPrice = quantity * price;

//     console.log('product', product);
//     // const basket = {
//     //     product, // product : 'pizza'
//     //     quantity,
//     //     price,
//     //     totalPrice
//     // }

//     // return basket;

//     return {
//         product,
//         quantity,
//         price,
//         totalPrice
//     }
// }
// console.log(createBasket('pizza', 3, 120));
// console.log(createBasket('aplle', 13, 1200));

// Task - 2
// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–µ–¥–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ–≥–æ –∫–ª—É–±—É. –§—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î 1 –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ –æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–µ –∫–ª—é—á —Ü–µ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è —Ü–µ —á–∞—Å –æ—Ä–µ–Ω–¥–∏ —É —Ö–≤–∏–ª–∏–Ω–∞—Ö.
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ç–µ —Å–∫—ñ–ª—å–∫–∏ –±—É–ª–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —è–∫–∏–π —Å–µ—Ä–µ–¥–Ω—ñ–π —á–∞—Å –æ—Ä–µ–Ω–¥–∏ –∫–æ–º–ø'—é—Ç–µ—Ä.

// const players = {
//     Den: 60,
//     Kate: 130,
//     William: 45,
//     Matthew: 120,
//     Ethan: 40,
//     David: 55,
// }

// function getTime(obj) {
//     const values = Object.values(obj);
//     let total = 0;
// console.log(values);
//     for (const value of values) {
//         total += value;
//     }

//     return `Count of players ${values.length}, average time ${total/values.length}`
// }

// console.log(getTime(players));


// Task - 3
// 1 –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
//    1 –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å–∏–≤
//    2 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤–∞ –∫–Ω–∏–≥–∏
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –Ü–º–µ–Ω–∞ —é–∑–µ—Ä—ñ–≤ (—Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä—ñ–Ω–≥–∏) –≤ —è–∫–∏—Ö —î –¥–∞–Ω–∞ –∫–Ω–∏–≥–∞ ("Harry Potter") \\\ "Anna, Oleksii"

// 2 –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤—ñ–∫ –≤—Å—ñ—Ö —é–∑–µ—Ä—ñ–≤ —É —è–∫–∏—Ö —î –∫–ª—é—á age.

// const friends = [
//     { name: "Anna", books: ["Bible", "Harry Potter"], age: 21 },
//     { name: "Bob", books: ["War and peace", "Romeo and Juliet"], age: 26 },
//     { name: "Alice", books: ["War and peace", "Romeo and Juliet"] },
//     { name: "Oleksii", books: ["Bible", "War and peace", "Harry Potter", "Romeo and Juliet"], age: 26 },
// ]

// function getTotalAge(arr) {
//     let totalAge = 0;

//     for (const user of arr) {
//         // console.log(user.name, 'age' in user);

//         if ('age' in user) {
//             console.log(`${user.name} - ${user.age}`);
//             totalAge += user.age
//         }
//         // if (user.hasOwnProperty('age')) {
//         //     totalAge += user.age
//         // }
//     }
//     console.log(totalAge);
// }
// console.log(getTotalAge(friends));






// const user = {
//     name: "Anna",
//     books: ["Bible", "Harry Potter"],
//     age: 21
// }
// function getUsers(arr, bookName) {
//     const userNames = [];
//     for (const user of arr) {
//         if (user.books.includes(bookName)) {
//             userNames.push(user.name);
//         }
//     }

//     return userNames.join(', ');
// }
// console.log(getUsers(friends, "Harry Potter"));




// Task - 4
// 1 –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å–ø–∏—Åo–∫ —ñ–º–µ–Ω —É—á–Ω—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É
// 2 –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—á–∫—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞

// const hogvarts = {
//     griffindor: [{
//         name: "Harry",
//         points: 17
//     },
//     {
//         name: "Hermiona",
//         points: 19
//     },
//     {
//         name: "Ron",
//         points: 14
//     },
//     ],
//     slizerin: [{
//         name: "Draco",
//         points: 17
//     },
//     {
//         name: "Goyl",
//         points: 14
//     },
//     {
//         name: "Crabbe",
//         points: 5
//     },
//     ],
//     getUserList(faculty) {
//         if (!(faculty in this)) {
//             return 'Faculty not found üò•';
//         }
//         const students = [];
//         for (const student of this[faculty]) {
//             students.push(student.name);
//         }
//         return students.join(', ')
//     },
//     getTotalPoints(faculty) {
//         if (!(faculty in this)) { // ! HE 
//             return 'Faculty not found üò•';
//         }
//         let totalPoints = 0;
//         for (const student of this[faculty]) {
//             if ('points' in student) {
//                 totalPoints += student.points;
//             }
//         }

//         return totalPoints;
//     }
// }

// console.log(hogvarts.getUserList('griffindor'));
// console.log(hogvarts.getUserList('slizerin'));
// console.log(hogvarts.getUserList('slitherin'));

// console.log(hogvarts.getTotalPoints('griffindor'));
// console.log(hogvarts.getTotalPoints('slizerin'));
// console.log(hogvarts.getTotalPoints('slitherin'));




// const user = {
//     name: 'Test user',
//     skills: {
//         html: false,
//         css: true,
//         react: false
//     },
// }


// let totalKeys = 0;

// for (const key in user) {
//     if (user.hasOwnProperty(key)) {
//         totalKeys += 1
//     }
// }

// console.log(totalKeys);

// console.log(Object.keys(user).length);


// console.log(800 === 000800);
// console.log(123 === 000123);


// 2) —á–æ —Ü–µ ? 800 === 000800 true 123 === 000123 false
// 3) –¥–µ –º–æ–∂–Ω–∞ –¥–∏–≤–∏—Ç–∏—Å—è —ñ–Ω—Ñ—É –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—è–∫–∏—Ö –º–æ–≤ —â–æ–± –±—É—Ç–∏ –≤ –∫—É—Ä—Å—ñ –≤—Å—ñ—Ö –Ω–æ–≤–∏—Ö —Ñ—ñ—à–æ–∫ ?
// 4) —è –∑–Ω–∞–π—à–æ–≤ –¥–æ–¥–∞—Ç–æ–∫ RunJS —Ç–∞–º –Ω–µ —Ç—Ä–µ–±–∞ —Å–≤—Ç–æ—Ä—é–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏ —ñ –ø–∏—Å–∞—Ç–∏ –ª–æ–≥–∏ —Ç–∞–º –≤–∂–µ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –≤–∏ –∑–Ω–∞—î—Ç–µ –ø—Ä–æ —Ü–µ–π –¥–æ–¥–∞—Ç–æ–∫ ? –ø–∏—à—É —â–æ–± –≤—Å—ñ –∑–º–æ–≥–ª–∏ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤ –Ω—å–æ–º—É –ø—Ä–æ—Å—Ç–æ –Ω–µ —Ç—Ä–µ–±–∞ –∑–∞–π–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤ —ñ –±—Ä–∞—É–∑–µ—Ä –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ –π–æ–≥–æ –Ω–∞–≤—ñ—Ç—å –Ω–∞ –∑–∞–Ω–Ω—è—Ç—è—Ö –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏, —â–æ —Å–∫–∞–∂–µ—Ç–µ ? —è–∫—Ä–∞–∑ –ø—Ä–∞–∫—Ç–∏–∫–∞ –±–µ–∑ –ª–æ–≥—ñ–≤ —è–∫—ñ –≤—Å–µ –æ–¥–Ω–æ —Ç—Ä–µ–±–∞ –±—É–¥–µ –ø–æ—Ç—ñ–º –ø—Ä–∏–±–∏—Ä–∞—Ç–∏ 
// 5) –±–∞—á–∏–≤ —É –≤–∞—Å –≤ –¥–∂—Å —Å–Ω—ñ–ø–µ—Ç–∏ –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∫–∏ –∫–æ–¥—É —á–∏ –º–æ–∂–Ω–∞ –±—É–¥–µ —ñ—Ö –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤ —Å–ª–µ–∫ ?
// 6) —á–∏ —î —É –≤–∞—Å –≤–∏–≥–æ—Ä–∞–Ω–Ω—è —ñ —è–∫—â–æ —î —è–∫ –∑ –Ω–∏–º —Å–ø—Ä–∞–≤–ª—è—Ç–∏—Å—è ?